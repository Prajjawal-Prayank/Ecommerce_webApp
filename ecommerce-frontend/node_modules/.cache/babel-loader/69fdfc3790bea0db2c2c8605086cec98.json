{"ast":null,"code":"var _jsxFileName = \"D:\\\\B Tech\\\\WebD\\\\ecommerce-frontend\\\\src\\\\core\\\\Checkbox.js\";\nimport React, { useState, useEffect } from 'react';\n\nconst Checkbox = ({\n  categories\n}) => {\n  const [checked, setChecked] = useState([]);\n\n  const handleToggle = c => () => {\n    const currentCategoryId = checked.indexOf(c); //indexof() will return -1 if not found\n\n    const newCheckedCategoryId = [...checked]; //if this category was not already in checked category\n\n    if (currentCategoryId === -1) {\n      newCheckedCategoryId.push(c);\n    } else {\n      newCheckedCategoryId.splice(currentCategoryId, 1);\n    }\n\n    console.log(newCheckedCategoryId);\n    setChecked(newCheckedCategoryId);\n  };\n\n  return categories.map((c, i) => /*#__PURE__*/React.createElement(\"li\", {\n    key: i,\n    className: \"list-unstyled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleToggle(c._id),\n    value: checked.indexOf(c._id === -1),\n    type: \"checkbox\",\n    className: \"form-check-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-check-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, c.name)));\n};\n\nexport default Checkbox;","map":{"version":3,"sources":["D:/B Tech/WebD/ecommerce-frontend/src/core/Checkbox.js"],"names":["React","useState","useEffect","Checkbox","categories","checked","setChecked","handleToggle","c","currentCategoryId","indexOf","newCheckedCategoryId","push","splice","console","log","map","i","_id","name"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;;AAEA,MAAMC,QAAQ,GAAC,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAC3B,QAAM,CAACC,OAAD,EAASC,UAAT,IAAqBL,QAAQ,CAAC,EAAD,CAAnC;;AAEA,QAAMM,YAAY,GAAGC,CAAC,IAAG,MAAI;AACzB,UAAMC,iBAAiB,GAAGJ,OAAO,CAACK,OAAR,CAAgBF,CAAhB,CAA1B,CADyB,CACuB;;AAChD,UAAMG,oBAAoB,GAAC,CAAC,GAAGN,OAAJ,CAA3B,CAFyB,CAGzB;;AACA,QAAGI,iBAAiB,KAAG,CAAC,CAAxB,EAA0B;AACtBE,MAAAA,oBAAoB,CAACC,IAArB,CAA0BJ,CAA1B;AACH,KAFD,MAEK;AACDG,MAAAA,oBAAoB,CAACE,MAArB,CAA4BJ,iBAA5B,EAA8C,CAA9C;AACH;;AACDK,IAAAA,OAAO,CAACC,GAAR,CAAYJ,oBAAZ;AACAL,IAAAA,UAAU,CAACK,oBAAD,CAAV;AACH,GAXD;;AAaA,SAAOP,UAAU,CAACY,GAAX,CAAe,CAACR,CAAD,EAAGS,CAAH,kBAClB;AAAI,IAAA,GAAG,EAAEA,CAAT;AAAY,IAAA,SAAS,EAAC,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,QAAQ,EAAEV,YAAY,CAACC,CAAC,CAACU,GAAH,CAA7B;AACI,IAAA,KAAK,EAAEb,OAAO,CAACK,OAAR,CAAgBF,CAAC,CAACU,GAAF,KAAQ,CAAC,CAAzB,CADX;AAEI,IAAA,IAAI,EAAC,UAFT;AAEoB,IAAA,SAAS,EAAC,kBAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAKI;AAAO,IAAA,SAAS,EAAC,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCV,CAAC,CAACW,IAAvC,CALJ,CADG,CAAP;AASH,CAzBD;;AA4BA,eAAehB,QAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\r\n\r\nconst Checkbox=({categories})=>{\r\n    const [checked,setChecked]=useState([]);\r\n\r\n    const handleToggle = c =>()=>{\r\n        const currentCategoryId = checked.indexOf(c);   //indexof() will return -1 if not found\r\n        const newCheckedCategoryId=[...checked];\r\n        //if this category was not already in checked category\r\n        if(currentCategoryId===-1){\r\n            newCheckedCategoryId.push(c);\r\n        }else{\r\n            newCheckedCategoryId.splice(currentCategoryId,1);\r\n        }\r\n        console.log(newCheckedCategoryId);\r\n        setChecked(newCheckedCategoryId);\r\n    }\r\n\r\n    return categories.map((c,i)=>(\r\n        <li key={i} className=\"list-unstyled\">\r\n            <input onChange={handleToggle(c._id)} \r\n                value={checked.indexOf(c._id===-1)} \r\n                type=\"checkbox\" className=\"form-check-input\" \r\n            />\r\n            <label className=\"form-check-label\">{c.name}</label>\r\n        </li>\r\n    ));\r\n};\r\n\r\n\r\nexport default Checkbox;"]},"metadata":{},"sourceType":"module"}