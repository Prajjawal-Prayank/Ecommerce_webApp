{"ast":null,"code":"var _jsxFileName = \"D:\\\\B Tech\\\\WebD\\\\ecommerce-frontend\\\\src\\\\core\\\\RadioBox.js\";\nimport React, { useState, useEffect, Fragment } from 'react';\n\nconst RadioBox = ({\n  prices,\n  handleFilters\n}) => {\n  //const [value,setValue]=useState(0);\n  const [value, setValue] = useState({});\n\n  const handleChange = event => {\n    handleFilters(event.target.value); //basically, on change, this is sent to parent component for evaluation\n\n    setValue(event.target.value);\n    console.log(event.target.value);\n  };\n\n  return prices.map((p, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleChange,\n    id: i //value={`${p._id}`} \n    ,\n    value: p,\n    name: p //this ensures that only one radioButton is selected\n    ,\n    type: \"radio\",\n    className: \"mr-2 ml-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }), \"          \", /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-check-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, p.name)));\n};\n\nexport default RadioBox;","map":{"version":3,"sources":["D:/B Tech/WebD/ecommerce-frontend/src/core/RadioBox.js"],"names":["React","useState","useEffect","Fragment","RadioBox","prices","handleFilters","value","setValue","handleChange","event","target","console","log","map","p","i","name"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,EAAiCC,QAAjC,QAAgD,OAAhD;;AAEA,MAAMC,QAAQ,GAAC,CAAC;AAACC,EAAAA,MAAD;AAAQC,EAAAA;AAAR,CAAD,KAA0B;AACrC;AACA,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAiBP,QAAQ,CAAC,EAAD,CAA/B;;AAEA,QAAMQ,YAAY,GAAEC,KAAD,IAAS;AACxBJ,IAAAA,aAAa,CAACI,KAAK,CAACC,MAAN,CAAaJ,KAAd,CAAb,CADwB,CACW;;AACnCC,IAAAA,QAAQ,CAACE,KAAK,CAACC,MAAN,CAAaJ,KAAd,CAAR;AAA8BK,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACC,MAAN,CAAaJ,KAAzB;AACjC,GAHD;;AAKA,SAAOF,MAAM,CAACS,GAAP,CAAW,CAACC,CAAD,EAAGC,CAAH,kBACd;AAAK,IAAA,GAAG,EAAEA,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,QAAQ,EAAEP,YAAjB;AAA+B,IAAA,EAAE,EAAEO,CAAnC,CACI;AADJ;AAEI,IAAA,KAAK,EAAED,CAFX;AAGI,IAAA,IAAI,EAAEA,CAHV,CAGwB;AAHxB;AAII,IAAA,IAAI,EAAC,OAJT;AAIiB,IAAA,SAAS,EAAC,WAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,6BAOI;AAAO,IAAA,SAAS,EAAC,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCA,CAAC,CAACE,IAAvC,CAPJ,CADG,CAAP;AAWH,CApBD;;AAsBA,eAAeb,QAAf","sourcesContent":["import React,{useState,useEffect,Fragment} from 'react';\r\n\r\nconst RadioBox=({prices,handleFilters})=>{\r\n    //const [value,setValue]=useState(0);\r\n    const [value,setValue]=useState({});\r\n\r\n    const handleChange=(event)=>{\r\n        handleFilters(event.target.value); //basically, on change, this is sent to parent component for evaluation\r\n        setValue(event.target.value); console.log(event.target.value);\r\n    };\r\n\r\n    return prices.map((p,i)=>(\r\n        <div key={i} >\r\n            <input onChange={handleChange} id={i}\r\n                //value={`${p._id}`} \r\n                value={p}\r\n                name={p}            //this ensures that only one radioButton is selected\r\n                type=\"radio\" className=\"mr-2 ml-4\" \r\n            />          {}\r\n            <label className=\"form-check-label\">{p.name}</label> \r\n        </div>\r\n    ));\r\n};\r\n\r\nexport default RadioBox;"]},"metadata":{},"sourceType":"module"}