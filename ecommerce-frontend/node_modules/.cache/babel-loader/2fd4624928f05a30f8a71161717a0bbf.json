{"ast":null,"code":"var _jsxFileName = \"D:\\\\B Tech\\\\WebD\\\\ecommerce-frontend\\\\src\\\\user\\\\Signup.js\";\nimport React, { useState } from 'react';\nimport Layout from '../core/Layout';\nimport { API } from '../config';\n\nconst Signup = () => {\n  const [values, setValues] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    error: \"\",\n    success: false\n  });\n  const {\n    name,\n    email,\n    password,\n    success,\n    error,\n    confirmPassword\n  } = values; //higher order function\n\n  const handleChange = name => event => {\n    setValues({ ...values,\n      error: false,\n      [name]: event.target.value\n    });\n  };\n\n  const signup = user => {\n    //user has name,email,password\n    //console.log(name,email,password);\n    return fetch(`${API}/signup`, {\n      //fetch(url,object)\n      method: \"POST\",\n      headers: {\n        Accept: 'application/json',\n        //tells the server that which content-type is understandable by the client \n        \"Content-Type\": \"application/json\" //this tells backend that we are sending a json object\n\n      },\n      body: JSON.stringify(user)\n    }).then(response => {\n      return response.json();\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const clickSubmit = event => {\n    event.preventDefault(); //this is done to prevent Default action on clicking button.\n    //The default action is that the page gets reloaded                                \n\n    signup({\n      name,\n      email,\n      password,\n      confirmPassword\n    }) //since the key and value are same in name:name,email:email,password:password ,so\n    //we write this way\n    .then(data => {\n      console.log(\"data = \" + JSON.stringify(data));\n\n      if (data.error) {\n        setValues({ ...values,\n          error: data.error,\n          confirmPassword: '',\n          success: false\n        });\n      } else {\n        setValues({ ...values,\n          name: '',\n          email: '',\n          password: '',\n          confirmPassword: '',\n          error: '',\n          success: true\n        });\n      }\n    });\n  };\n\n  const signUpForm = () => /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleChange('name'),\n    type: \"text\",\n    className: \"form-control\",\n    value: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleChange('email'),\n    type: \"email\",\n    className: \"form-control\",\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleChange('password'),\n    type: \"password\",\n    className: \"form-control\",\n    value: password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleChange('confirmPassword'),\n    type: \"password\",\n    className: \"form-control\",\n    value: confirmPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: clickSubmit,\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"Submit\"));\n\n  const showError = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-danger\",\n    style: {\n      display: error ? '' : 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, error); //curly braces were not used in this function. So, () is used.No return () statement.\n\n\n  const showSuccess = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-info\",\n    style: {\n      display: success ? '' : 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, \"Account successfully created. Please login to continue.\");\n\n  return (\n    /*#__PURE__*/\n    //curly braces were used in this function. So, return() is used.\n    React.createElement(Layout, {\n      title: \"Signup\",\n      description: \"Signup to E-commerce App\",\n      className: \"container col-md-6 offset-md-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, showError(), showSuccess(), signUpForm(), JSON.stringify(values))\n  );\n};\n\nexport default Signup;","map":{"version":3,"sources":["D:/B Tech/WebD/ecommerce-frontend/src/user/Signup.js"],"names":["React","useState","Layout","API","Signup","values","setValues","name","email","password","confirmPassword","error","success","handleChange","event","target","value","signup","user","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","catch","err","console","log","clickSubmit","preventDefault","data","signUpForm","showError","display","showSuccess"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\r\nimport Layout from '../core/Layout';\r\nimport {API} from '../config';\r\n\r\nconst Signup=()=> {\r\n    const [values,setValues]=useState({\r\n        name:\"\",\r\n        email:\"\",\r\n        password:\"\",\r\n        confirmPassword:\"\",\r\n        error:\"\",\r\n        success:false\r\n    });\r\n\r\n    const {name,email,password,success,error,confirmPassword}=values;\r\n\r\n    //higher order function\r\n    const handleChange=name=>event=>{\r\n        setValues({...values,error:false, [name]:event.target.value});\r\n    };\r\n\r\n    const signup=(user)=>{          //user has name,email,password\r\n        //console.log(name,email,password);\r\n        return fetch(`${API}/signup`,{             //fetch(url,object)\r\n            method:\"POST\",      \r\n            headers:{\r\n                Accept:'application/json',          //tells the server that which content-type is understandable by the client \r\n                \"Content-Type\" : \"application/json\",    //this tells backend that we are sending a json object\r\n            },\r\n            body: JSON.stringify(user)\r\n        })\r\n            .then(response=>{\r\n                return response.json();\r\n            })\r\n            .catch(err=>{\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    const clickSubmit=(event)=>{\r\n        event.preventDefault(); //this is done to prevent Default action on clicking button.\r\n                                //The default action is that the page gets reloaded                                \r\n        signup({name,email,password,confirmPassword})\r\n            //since the key and value are same in name:name,email:email,password:password ,so\r\n            //we write this way\r\n            .then(data=>{ console.log(\"data = \"+JSON.stringify(data));\r\n                if(data.error){\r\n                    setValues({...values,error: data.error,confirmPassword:'', success:false});\r\n                }else{\r\n                    setValues({...values,\r\n                            name:'',\r\n                            email:'',\r\n                            password:'',\r\n                            confirmPassword:'',\r\n                            error:'',\r\n                            success:true\r\n                    });\r\n                }\r\n            });    \r\n    };\r\n\r\n    const signUpForm=()=>(\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Email</label>\r\n                <input onChange={handleChange('email')} type=\"email\" className=\"form-control\" value={email}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Password</label>\r\n                <input onChange={handleChange('password')} type=\"password\" className=\"form-control\" value={password}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Confirm Password</label>\r\n                <input onChange={handleChange('confirmPassword')} type=\"password\" className=\"form-control\" value={confirmPassword}/>\r\n            </div>\r\n            <button onClick={clickSubmit} className=\"btn btn-primary\">\r\n                Submit\r\n            </button>\r\n        </form>\r\n    );\r\n\r\n    const showError=()=>(\r\n        <div className=\"alert alert-danger\" style={{display:error?'':'none'}}>\r\n            {error}\r\n        </div>\r\n    );\r\n    //curly braces were not used in this function. So, () is used.No return () statement.\r\n\r\n\r\n    const showSuccess=()=>(\r\n        <div className=\"alert alert-info\" style={{display:success?'':'none'}}>\r\n            Account successfully created. Please login to continue.\r\n        </div>\r\n    );\r\n\r\n    return(     //curly braces were used in this function. So, return() is used.\r\n        <Layout title='Signup' description='Signup to E-commerce App' \r\n        className=\"container col-md-6 offset-md-2\">\r\n            {showError()}\r\n            {showSuccess()}\r\n            {signUpForm()}\r\n            {JSON.stringify(values)}\r\n        </Layout>\r\n    );\r\n};\r\n\r\n\r\nexport default Signup;"]},"metadata":{},"sourceType":"module"}