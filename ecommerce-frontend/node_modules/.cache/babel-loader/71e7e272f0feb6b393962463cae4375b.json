{"ast":null,"code":"import _toConsumableArray from\"D:\\\\B Tech\\\\WebD\\\\Ecommerce_webApp\\\\ecommerce-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"D:\\\\B Tech\\\\WebD\\\\Ecommerce_webApp\\\\ecommerce-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';var Checkbox=function Checkbox(_ref){var categories=_ref.categories,handleFilters=_ref.handleFilters;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),checked=_useState2[0],setChecked=_useState2[1];var handleToggle=function handleToggle(c){return function(){var currentCategoryId=checked.indexOf(c);//indexof() will return -1 if not found\nvar newCheckedCategoryId=_toConsumableArray(checked);//if this category was not already in checked category\n//add it\nif(currentCategoryId===-1){newCheckedCategoryId.push(c);}else{//remove it\nnewCheckedCategoryId.splice(currentCategoryId,1);}setChecked(newCheckedCategoryId);handleFilters(newCheckedCategoryId);//basically, on toggle, this list is sent to parent component for evaluation\n};};return categories.map(function(c,i){return/*#__PURE__*/React.createElement(\"li\",{key:i,className:\"list-unstyled\"},/*#__PURE__*/React.createElement(\"input\",{onChange:handleToggle(c._id)//since handleToggle returns a func., so calling handleToggle() is valid as event handler\n,value:checked.indexOf(c._id===-1)//value={c._id}\n,type:\"checkbox\",className:\"form-check-input\"}),/*#__PURE__*/React.createElement(\"label\",{className:\"form-check-label\"},c.name));});};export default Checkbox;","map":{"version":3,"sources":["D:/B Tech/WebD/Ecommerce_webApp/ecommerce-frontend/src/core/Checkbox.js"],"names":["React","useState","Checkbox","categories","handleFilters","checked","setChecked","handleToggle","c","currentCategoryId","indexOf","newCheckedCategoryId","push","splice","map","i","_id","name"],"mappings":"4WAAA,MAAOA,CAAAA,KAAP,EAAcC,QAAd,KAA6B,OAA7B,CAEA,GAAMC,CAAAA,QAAQ,CAAC,QAATA,CAAAA,QAAS,MAA8B,IAA5BC,CAAAA,UAA4B,MAA5BA,UAA4B,CAAjBC,aAAiB,MAAjBA,aAAiB,eACdH,QAAQ,CAAC,EAAD,CADM,wCAClCI,OADkC,eAC1BC,UAD0B,eAGzC,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,CAAC,QAAG,WAAI,CACzB,GAAMC,CAAAA,iBAAiB,CAAGJ,OAAO,CAACK,OAAR,CAAgBF,CAAhB,CAA1B,CAAgD;AAChD,GAAMG,CAAAA,oBAAoB,oBAAKN,OAAL,CAA1B,CACA;AACA;AACA,GAAGI,iBAAiB,GAAG,CAAC,CAAxB,CAA0B,CACtBE,oBAAoB,CAACC,IAArB,CAA0BJ,CAA1B,EACH,CAFD,IAEK,CAAG;AACJG,oBAAoB,CAACE,MAArB,CAA4BJ,iBAA5B,CAA8C,CAA9C,EACH,CACDH,UAAU,CAACK,oBAAD,CAAV,CACAP,aAAa,CAACO,oBAAD,CAAb,CAAwC;AAC3C,CAZqB,EAAtB,CAcA,MAAOR,CAAAA,UAAU,CAACW,GAAX,CAAe,SAACN,CAAD,CAAGO,CAAH,qBAClB,0BAAI,GAAG,CAAEA,CAAT,CAAY,SAAS,CAAC,eAAtB,eACI,6BAAO,QAAQ,CAAER,YAAY,CAACC,CAAC,CAACQ,GAAH,CAAS;AAAtC,CACI,KAAK,CAAEX,OAAO,CAACK,OAAR,CAAgBF,CAAC,CAACQ,GAAF,GAAQ,CAAC,CAAzB,CACP;AAFJ,CAGI,IAAI,CAAC,UAHT,CAGoB,SAAS,CAAC,kBAH9B,EADJ,cAMI,6BAAO,SAAS,CAAC,kBAAjB,EAAqCR,CAAC,CAACS,IAAvC,CANJ,CADkB,EAAf,CAAP,CAUH,CA3BD,CA8BA,cAAef,CAAAA,QAAf","sourcesContent":["import React,{useState} from 'react';\r\n\r\nconst Checkbox=({categories,handleFilters})=>{\r\n    const [checked,setChecked]=useState([]);\r\n\r\n    const handleToggle = c =>()=>{\r\n        const currentCategoryId = checked.indexOf(c);   //indexof() will return -1 if not found\r\n        const newCheckedCategoryId=[...checked];\r\n        //if this category was not already in checked category\r\n        //add it\r\n        if(currentCategoryId===-1){\r\n            newCheckedCategoryId.push(c);\r\n        }else{  //remove it\r\n            newCheckedCategoryId.splice(currentCategoryId,1);\r\n        }\r\n        setChecked(newCheckedCategoryId);\r\n        handleFilters(newCheckedCategoryId);    //basically, on toggle, this list is sent to parent component for evaluation\r\n    };\r\n\r\n    return categories.map((c,i)=>(\r\n        <li key={i} className=\"list-unstyled\">\r\n            <input onChange={handleToggle(c._id)} //since handleToggle returns a func., so calling handleToggle() is valid as event handler\r\n                value={checked.indexOf(c._id===-1)} \r\n                //value={c._id}\r\n                type=\"checkbox\" className=\"form-check-input\" \r\n            />\r\n            <label className=\"form-check-label\">{c.name}</label>\r\n        </li>\r\n    ));\r\n};\r\n\r\n\r\nexport default Checkbox;"]},"metadata":{},"sourceType":"module"}