{"ast":null,"code":"var _jsxFileName = \"D:\\\\B Tech\\\\WebD\\\\ecommerce_MERN\\\\ecommerce-frontend\\\\src\\\\core\\\\Search.js\";\nimport React, { useState, useEffect } from 'react';\nimport { getCategories, list } from './apiCore';\nimport Card from './Card';\n\nconst Search = () => {\n  const [data, setData] = useState({\n    categories: [],\n    //will help in displaying all the categories\n    category: '',\n    //will tell us what category is selected\n    search: '',\n    //will keep whatever text is written in search field\n    results: '',\n    //will keep output of SEARCH\n    searched: false\n  });\n  const {\n    categories,\n    category,\n    search,\n    results,\n    searched\n  } = data;\n\n  const loadCategories = () => {\n    getCategories().then(data => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setData({ ...data,\n          categories: data\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    loadCategories();\n  }, []);\n\n  const searchData = () => {\n    if (search) {\n      list({\n        search: search || undefined,\n        category: category\n      }).then(response => {\n        if (response.error) {\n          console.log(response.error);\n        } else {\n          setData({ ...data,\n            results: response,\n            searched: true\n          });\n        }\n      });\n    }\n  };\n\n  const searchSubmit = event => {\n    event.preventDefault();\n    searchData();\n  };\n\n  const handleChange = name => event => {\n    setData({ ...data,\n      [name]: event.target.value,\n      searched: false\n    });\n  };\n\n  const searchMessage = (searched, results) => {\n    if (searched) {\n      if (results.length > 0) return `Found ${results.length} products`;\n      if (results.length < 1) return `No products found`;\n    }\n  };\n\n  const searchedProducts = (results = []) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"mt-4 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, searchMessage(searched, results)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, results && results.map((product, i) => /*#__PURE__*/React.createElement(Card, {\n      key: i,\n      product: product,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    }))));\n  };\n\n  const searchForm = () =>\n  /*#__PURE__*/\n  //span is used in the form because we want to to show all the 3 components (category selector,\n  //,search input field,search button) in a single line \n  React.createElement(\"form\", {\n    onSubmit: searchSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    className: \"btn mr-2\",\n    onChange: handleChange(\"category\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"All\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }, \"All\"), categories.map((c, i) => /*#__PURE__*/React.createElement(\"option\", {\n    key: i,\n    value: c._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 33\n    }\n  }, c.name)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"search\",\n    className: \"form-control\",\n    onChange: handleChange(\"search\"),\n    placeholder: \"Search for products\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    style: {\n      border: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"input-group-text ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, \"Search \"))));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, searchForm()), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, searchedProducts(results)));\n};\n\nexport default Search;","map":{"version":3,"sources":["D:/B Tech/WebD/ecommerce_MERN/ecommerce-frontend/src/core/Search.js"],"names":["React","useState","useEffect","getCategories","list","Card","Search","data","setData","categories","category","search","results","searched","loadCategories","then","error","console","log","searchData","undefined","response","searchSubmit","event","preventDefault","handleChange","name","target","value","searchMessage","length","searchedProducts","map","product","i","searchForm","c","_id","border"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport {getCategories,list} from './apiCore';\r\nimport Card from './Card';\r\n\r\nconst Search=()=>{\r\n    const [data,setData]=useState({\r\n        categories:[],      //will help in displaying all the categories\r\n        category:'',        //will tell us what category is selected\r\n        search:'',          //will keep whatever text is written in search field\r\n        results:'',         //will keep output of SEARCH\r\n        searched:false\r\n    });\r\n\r\n    const {categories,category,search,results,searched}=data;\r\n\r\n    const loadCategories=()=>{\r\n        getCategories()\r\n        .then(data=>{\r\n            if(data.error){\r\n                console.log(data.error);\r\n            }else{\r\n                setData({...data,categories: data});\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        loadCategories();\r\n    },[]);\r\n\r\n    const searchData=()=>{\r\n        if(search){\r\n            list({search:search || undefined, category:category})\r\n            .then(response=>{\r\n                if(response.error){\r\n                    console.log(response.error);\r\n                }else{\r\n                    setData({...data,results:response,searched:true});\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const searchSubmit=(event)=>{\r\n        event.preventDefault();\r\n        searchData();\r\n    };\r\n\r\n    const handleChange=name=>event=>{\r\n        setData({...data,[name]:event.target.value,searched:false});\r\n    };\r\n\r\n\r\n    const searchMessage=(searched,results)=>{\r\n        if(searched){\r\n            if(results.length>0)\r\n                return `Found ${results.length} products`;\r\n            if(results.length<1)\r\n                return `No products found`;     \r\n        }\r\n    }\r\n\r\n    const searchedProducts=(results=[])=>{\r\n        return (\r\n            <div>\r\n                <h2 className=\"mt-4 mb-4\">\r\n                    {searchMessage(searched,results)}\r\n                </h2>\r\n                <div className=\"row\" > \r\n                    {results && results.map((product,i)=>(\r\n                        <Card key={i} product={product} />\r\n                    ))}\r\n            </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const searchForm=()=>(\r\n        //span is used in the form because we want to to show all the 3 components (category selector,\r\n        //,search input field,search button) in a single line \r\n        <form onSubmit={searchSubmit}>\r\n            <span className=\"input-group-text\"> \r\n                <div className=\"input-group-prepend\">\r\n                    <select className=\"btn mr-2\" onChange={handleChange(\"category\")}>\r\n                        <option value=\"All\">All</option>\r\n                            {categories.map((c,i)=>(\r\n                                <option key={i} value={c._id} >{c.name}</option>\r\n                            ))}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"input-group input-group-lg\">\r\n                    <input type=\"search\" className=\"form-control\" onChange={handleChange(\"search\")} \r\n                        placeholder=\"Search for products\" />\r\n                </div>\r\n\r\n                <div className=\"input-group-append\" style={{border:'none'}}>\r\n                    <button className=\"input-group-text ml-2\">Search </button>\r\n                </div>\r\n\r\n            </span>\r\n        </form>\r\n    );\r\n\r\n    return (\r\n        <div className=\"row\" >\r\n            <div className=\"container mb-3\">\r\n                {searchForm()}\r\n            </div>\r\n            <div className=\"container-fluid mb-3\">\r\n                {searchedProducts(results)}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Search;"]},"metadata":{},"sourceType":"module"}