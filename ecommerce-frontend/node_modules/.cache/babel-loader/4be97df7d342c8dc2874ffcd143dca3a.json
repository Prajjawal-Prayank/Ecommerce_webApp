{"ast":null,"code":"var _jsxFileName = \"D:\\\\B Tech\\\\WebD\\\\ecommerce-frontend\\\\src\\\\core\\\\Checkout.js\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport Layout from './Layout';\nimport { getProducts, getBraintreeClientToken, processPayment, createOrder } from './apiCore';\nimport Card from './Card';\nimport { isAuthenticated } from '../auth';\nimport '../styles2.css';\nimport DropIn from 'braintree-web-drop-in-react';\nimport { emptyCart } from './cartHelpers';\n\nconst Checkout = ({\n  products\n}) => {\n  const [data, setData] = useState({\n    success: false,\n    clientToken: null,\n    error: '',\n    instance: {},\n    address: ''\n  });\n  const [modal, makeVisible] = useState(false);\n\n  const userId = isAuthenticated() && isAuthenticated().user._id;\n\n  const token = isAuthenticated() && isAuthenticated().token;\n\n  const getToken = (userId, token) => {\n    getBraintreeClientToken(userId, token).then(data => {\n      if (data.error) {\n        setData({ ...data,\n          error: data.error\n        });\n      } else {\n        setData({\n          clientToken: data.clientToken\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    getToken(userId, token);\n  }, []);\n\n  const getTotal = () => {\n    return products.reduce((currentTotal, currentItem) => {\n      return currentTotal + currentItem.count * currentItem.price;\n    }, 0);\n  };\n\n  const showModalFun = modal => () => {\n    //console.log(modal);\n    makeVisible(!modal);\n  };\n\n  const [ta, setTa] = useState(false);\n\n  const showTa = () => {\n    setTa(!ta);\n  };\n\n  const handleAddress = event => {\n    setData({ ...data,\n      address: event.target.value\n    });\n  };\n\n  const showCheckout = () => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, isAuthenticated() ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn \",\n    onClick: showTa,\n    style: {\n      background: \"orange\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 24\n    }\n  }, \"Proceed to Payment ->\")) : /*#__PURE__*/React.createElement(Link, {\n    to: \"/signin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }, \"Sign in to Checkout ->\"))));\n\n  const buy = () => {\n    //we send nonce to server\n    //nonce=data.instance.requestPaymentMethod();\n    let nonce;\n    let getNonce = data.instance.requestPaymentMethod().then(data => {\n      //console.log(data);\n      nonce = data.nonce; //we now send nonce to backend as paymentMethodNonce along with total amount\n      //console.log(\"nonce sent:-\"+nonce,getTotal(products));\n\n      const paymentData = {\n        paymentMethodNonce: nonce,\n        amount: getTotal(products)\n      };\n      processPayment(userId, token, paymentData).then(response => {\n        // console.log(response);console.log(response.success);\n        //setData({...data,success: response.success}); \n        const createOrderData = {\n          products: products,\n          transaction_Id: response.transaction.id,\n          amount: response.transaction.amount,\n          address: data.address\n        };\n        emptyCart(() => {\n          console.log(\"payment done and cart is emptied\");\n        });\n      }).catch(err => {\n        //console.log(err);\n        setData({ ...data,\n          error: err\n        });\n      });\n    }).catch(err => {\n      //console.log('dropin error:',err.message);\n      setData({ ...data,\n        error: err.message\n      });\n    });\n  };\n\n  const showDropIn = () => /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => setData({ ...data,\n      error: \"\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, data.clientToken != null && products.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DropIn, {\n    options: {\n      authorization: data.clientToken\n    },\n    onInstance: instance => data.instance = instance,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  })) : null);\n\n  const showError = error => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-danger\",\n    style: {\n      display: error ? '' : 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, error);\n\n  const showSuccess = success => /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-info\",\n    style: {\n      display: success ? '' : 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, \"Payment Successful..!\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invisible\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, success == true ? setTimeout(() => window.location.reload(), 300) : null));\n\n  const [load, showLoad] = useState(true);\n\n  const showLoading = () => {\n    if (load) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: \"loading\",\n        className: \"text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }\n      }, \"This may take a few seconds...\"));\n    }\n  };\n\n  const showModal = modal => modal ? /*#__PURE__*/React.createElement(\"div\", {\n    id: \"myModal1\",\n    className: \"modal1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal1-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal1-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: showModalFun(modal),\n    className: \"close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 25\n    }\n  }, \"\\xD7\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 45\n    }\n  }, \"Please fill in the details to continue.\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal1-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 21\n    }\n  }, showError(data.error), showSuccess(data.success), showLoading(), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invisible\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 25\n    }\n  }, setTimeout(() => showLoad(false), 3000)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 25\n    }\n  }, showDropIn(), data.success ? null : /*#__PURE__*/React.createElement(\"button\", {\n    onClick: buy,\n    style: {\n      float: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 33\n    }\n  }, \"Pay\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal1-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }\n  }))) : null;\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    id: \"bill\",\n    className: \"mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 25\n    }\n  }, \"Product\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 25\n    }\n  }, \"Price(Rs)\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 25\n    }\n  }, \"Quantity\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 25\n    }\n  }, \"Total(Rs)\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  }, products.map((p, i) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 25\n    }\n  }, p.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 25\n    }\n  }, p.price), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 25\n    }\n  }, p.count), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 25\n    }\n  }, p.count * p.price)))), /*#__PURE__*/React.createElement(\"tfoot\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"center\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 49\n    }\n  }, \"Grand total:-\"))), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      background: \"#003399\",\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 74\n    }\n  }, \"Rs \", getTotal(), \" \"))))), ta && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 20\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 21\n    }\n  }, \"Delivery Address\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    onChange: handleAddress,\n    className: \"form-control\",\n    value: data.address,\n    placeholder: \"Type delivery address...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginBottom: \"100px\",\n      float: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }, showCheckout()), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }\n  }, showModal(modal)));\n};\n\nexport default Checkout;\n/*\r\n<div style={{display:\"inline\"}}>\r\n                <h5 style={{display:\"inline\"}}>Grand Total : </h5> Rs {getTotal()} \r\n            </div>\r\n\r\nstyle={{display:\"none\"}}   \r\n\r\n<div className=\"conatainer mt-5\">\r\n                <button id=\"myBtn\" onClick={showModalFun(modal)} style={{alignSelf:\"center\"}}>\r\n                    Open Modal\r\n                </button>  \r\n            </div>\r\n\r\n\r\n{showModal()}\r\n\r\n\r\n\r\n{showError(data.error)}             \r\n{showDropIn()}\r\n<button onClick={buy} style={{float:\"right\"}}>Pay</button>\r\n\r\n{window.onClick(showModalFun(modal))}\r\n*/","map":{"version":3,"sources":["D:/B Tech/WebD/ecommerce-frontend/src/core/Checkout.js"],"names":["React","useState","useEffect","Fragment","Link","Layout","getProducts","getBraintreeClientToken","processPayment","createOrder","Card","isAuthenticated","DropIn","emptyCart","Checkout","products","data","setData","success","clientToken","error","instance","address","modal","makeVisible","userId","user","_id","token","getToken","then","getTotal","reduce","currentTotal","currentItem","count","price","showModalFun","ta","setTa","showTa","handleAddress","event","target","value","showCheckout","background","buy","nonce","getNonce","requestPaymentMethod","paymentData","paymentMethodNonce","amount","response","createOrderData","transaction_Id","transaction","id","console","log","catch","err","message","showDropIn","length","authorization","showError","display","showSuccess","setTimeout","window","location","reload","load","showLoad","showLoading","showModal","float","map","p","i","name","color","marginBottom"],"mappings":"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","sourcesContent":["import React,{useState,useEffect,Fragment} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport Layout from './Layout';\r\nimport {getProducts,getBraintreeClientToken,processPayment,createOrder} from './apiCore';\r\nimport Card from './Card';\r\nimport {isAuthenticated} from '../auth';\r\nimport '../styles2.css'\r\nimport DropIn from 'braintree-web-drop-in-react';\r\nimport {emptyCart} from './cartHelpers';\r\n\r\n\r\nconst Checkout=({products})=>{\r\n\r\n    const [data,setData]=useState({\r\n        success:false,\r\n        clientToken: null,\r\n        error:'',\r\n        instance:{},\r\n        address:''\r\n    });\r\n\r\n    const [modal,makeVisible]=useState(false);\r\n\r\n    const userId=isAuthenticated() && isAuthenticated().user._id;\r\n    const token=isAuthenticated() && isAuthenticated().token;\r\n\r\n    const getToken=(userId,token)=>{\r\n        getBraintreeClientToken(userId,token)\r\n            .then(data=>{\r\n                if(data.error){\r\n                    setData({...data,error: data.error});\r\n                }else{\r\n                    setData({clientToken:data.clientToken});\r\n                }\r\n            })\r\n    };\r\n\r\n    useEffect(()=>{\r\n        getToken(userId,token);\r\n    },[]);\r\n\r\n    const getTotal=()=>{\r\n        return products.reduce((currentTotal,currentItem)=>{\r\n            return currentTotal + (currentItem.count * currentItem.price);\r\n        },0);\r\n    };\r\n\r\n    const showModalFun=modal=>()=>{ \r\n        //console.log(modal);\r\n        makeVisible(!modal); \r\n    };\r\n\r\n    const [ta,setTa]=useState(false);\r\n\r\n    const showTa=()=>{\r\n        setTa(!ta);\r\n    }\r\n\r\n    const handleAddress=event=>{\r\n        setData({...data,address:event.target.value});\r\n    }\r\n\r\n    const showCheckout=()=>(\r\n        <div>\r\n            {isAuthenticated() ? (\r\n                    <button className=\"btn \" onClick={showTa} style={{background:\"orange\"}}>\r\n                       <b>Proceed to Payment -></b>\r\n                    </button>\r\n                ):(\r\n                    <Link to=\"/signin\">\r\n                        <button className=\"btn btn-primary\">\r\n                            <b>Sign in to Checkout -></b>\r\n                        </button>\r\n                    </Link>\r\n            )}\r\n        </div>\r\n    );\r\n\r\n    const buy=()=>{\r\n        //we send nonce to server\r\n        //nonce=data.instance.requestPaymentMethod();\r\n        let nonce;\r\n        let getNonce=data.instance.requestPaymentMethod()\r\n            .then(data=>{\r\n                //console.log(data);\r\n                nonce=data.nonce;\r\n                //we now send nonce to backend as paymentMethodNonce along with total amount\r\n                //console.log(\"nonce sent:-\"+nonce,getTotal(products));\r\n\r\n                const paymentData={\r\n                    paymentMethodNonce: nonce,\r\n                    amount: getTotal(products)\r\n                };\r\n\r\n                processPayment(userId,token,paymentData)\r\n                .then(response=>{  // console.log(response);console.log(response.success);\r\n                    //setData({...data,success: response.success}); \r\n\r\n                \r\n                const createOrderData={\r\n                    products: products,\r\n                    transaction_Id: response.transaction.id,\r\n                    amount: response.transaction.amount,\r\n                    address: data.address\r\n                }\r\n                \r\n\r\n                    emptyCart(()=>{\r\n                        console.log(\"payment done and cart is emptied\");\r\n                    })\r\n                })\r\n                .catch(err=>{\r\n                    //console.log(err);\r\n                    setData({...data,error:err});\r\n                });\r\n\r\n            })\r\n            .catch(err=>{\r\n                //console.log('dropin error:',err.message);\r\n                setData({...data,error: err.message});\r\n            });\r\n    }\r\n\r\n\r\n    const showDropIn=()=>(\r\n        <div onClick={()=>setData({...data,error:\"\"})}>\r\n            {data.clientToken!=null && products.length>0 ? (\r\n                <div >\r\n                    <DropIn options={{\r\n                            authorization: data.clientToken\r\n                        }} onInstance={instance=>(data.instance=instance)}\r\n                    />\r\n                    \r\n                </div>   \r\n            ):(null)}\r\n        </div>\r\n\r\n    );\r\n\r\n    const showError=error=>(\r\n        <div className=\"alert alert-danger\" style={{display:error?'':'none'}}>\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const showSuccess=success=>(\r\n        <Fragment>\r\n            <div className=\"alert alert-info\" style={{display:success?'':'none'}}>\r\n                Payment Successful..!\r\n            </div>\r\n            <div className=\"invisible\">\r\n                {(success==true)?setTimeout(()=>window.location.reload(),300):null}\r\n            </div>\r\n        </Fragment>\r\n    );\r\n\r\n    const [load,showLoad]=useState(true)\r\n    const showLoading=()=>{\r\n        if(load){\r\n            return (\r\n                <div id=\"loading\" className=\"text-muted\">\r\n                    <h6>This may take a few seconds...</h6>\r\n                </div>\r\n            )\r\n        }\r\n        \r\n    }\r\n\r\n    const showModal=(modal)=> modal? (\r\n            <div id=\"myModal1\" className=\"modal1\" >                \r\n                <div className=\"modal1-content\"  >\r\n                    <div className=\"modal1-header\">\r\n                        <span onClick={showModalFun(modal)} className=\"close\">&times;</span>\r\n                        <p className=\"mt-3\"><b>Please fill in the details to continue.</b></p>\r\n                    </div>\r\n                    <div className=\"modal1-body\" >\r\n                        {showError(data.error)}\r\n                        {showSuccess(data.success)}\r\n                        {showLoading()}\r\n                        <div className='invisible'>{setTimeout(()=>showLoad(false),3000)}</div>\r\n                        <div>\r\n                            {showDropIn()}\r\n                            {data.success? null:(\r\n                                <button onClick={buy} style={{float:\"right\"}}>Pay</button>)}\r\n                        </div>                        \r\n                    </div>\r\n                    <div className=\"modal1-footer\"></div>                    \r\n                </div>\r\n            </div>\r\n        ):(null);\r\n \r\n\r\n    return (\r\n        <Fragment>\r\n            <table id=\"bill\" className=\"mb-5\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Product</th>\r\n                        <th>Price(Rs)</th>\r\n                        <th>Quantity</th>\r\n                        <th>Total(Rs)</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {products.map((p,i)=>(\r\n                    <tr key={i}>\r\n                        <td>{p.name}</td>\r\n                        <td>{p.price}</td>\r\n                        <td>{p.count}</td>\r\n                        <td>{p.count * p.price}</td>\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n                <tfoot>\r\n                    <tr >\r\n                        <td colSpan=\"3\"><center><b>Grand total:-</b></center></td>\r\n                        <td style={{background:\"#003399\",color:\"white\"}}><b>Rs {getTotal()} </b></td>\r\n                    </tr>\r\n                </tfoot>\r\n            </table>  \r\n\r\n            {ta && <div>\r\n                    <h2>Delivery Address</h2>\r\n                    <textarea onChange={handleAddress} className=\"form-control\"\r\n                        value={data.address} placeholder=\"Type delivery address...\" />\r\n                    </div>    \r\n                }\r\n\r\n            <div style={{marginBottom :\"100px\",float: \"right\"}}>\r\n                {showCheckout()}                                \r\n            </div>\r\n            <div className=\"mt-5\">\r\n                {showModal(modal)}\r\n            </div>\r\n            \r\n        </Fragment>\r\n\r\n    )\r\n};\r\n\r\nexport default Checkout;\r\n/*\r\n<div style={{display:\"inline\"}}>\r\n                <h5 style={{display:\"inline\"}}>Grand Total : </h5> Rs {getTotal()} \r\n            </div>\r\n\r\nstyle={{display:\"none\"}}   \r\n\r\n<div className=\"conatainer mt-5\">\r\n                <button id=\"myBtn\" onClick={showModalFun(modal)} style={{alignSelf:\"center\"}}>\r\n                    Open Modal\r\n                </button>  \r\n            </div>\r\n\r\n\r\n{showModal()}\r\n\r\n\r\n\r\n{showError(data.error)}             \r\n{showDropIn()}\r\n<button onClick={buy} style={{float:\"right\"}}>Pay</button>\r\n\r\n{window.onClick(showModalFun(modal))}\r\n*/"]},"metadata":{},"sourceType":"module"}