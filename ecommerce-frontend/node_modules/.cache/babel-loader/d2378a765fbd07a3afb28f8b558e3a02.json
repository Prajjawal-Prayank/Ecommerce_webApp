{"ast":null,"code":"import{API}from'../config';export var createCategory=function createCategory(userId,token,category){return fetch(\"\".concat(API,\"/category/create/\").concat(userId),{//fetch(url,object)\nmethod:\"POST\",headers:{Accept:'application/json',//tells the server that which content-type is understandable by the client \n\"Content-Type\":\"application/json\",//this tells backend that we are sending a json object\nAuthorization:\"Bearer \".concat(token)},body:JSON.stringify(category)}).then(function(response){return response.json();}).catch(function(err){console.log(err);});};export var createProduct=function createProduct(userId,token,product){return fetch(\"\".concat(API,\"/product/create/\").concat(userId),{//fetch(url,object)\nmethod:\"POST\",headers:{Accept:'application/json',//tells the server that which content-type is understandable by the client \n//\"Content-Type\" : \"application/json\", //we don't need this here as we are sending form data here and not json\nAuthorization:\"Bearer \".concat(token)},body:product//product will be form-data\n}).then(function(response){return response.json();}).catch(function(err){console.log(err);});};export var getCategories=function getCategories(){return fetch(\"\".concat(API,\"/categories\"),{method:\"GET\"}).then(function(response){return response.json();}).catch(function(err){return console.log(err);});};export var listOrders=function listOrders(userId,token){return fetch(\"\".concat(API,\"/order/list/\").concat(userId),{method:\"GET\",headers:{Accept:'application/json',//tells the server that which content-type is understandable by the client         \nAuthorization:\"Bearer \".concat(token)}}).then(function(response){return response.json();}).catch(function(err){return console.log(err);});};export var getStatusValues=function getStatusValues(userId,token){return fetch(\"\".concat(API,\"/order/status-values/\").concat(userId),{method:\"GET\",headers:{Accept:'application/json',Authorization:\"Bearer \".concat(token)}}).then(function(response){return response.json();}).catch(function(err){return console.log(err);});};export var updateOrderStatus=function updateOrderStatus(userId,token,orderId,status){return fetch(\"\".concat(API,\"/order/:\").concat(orderId,\"/status/\").concat(userId),{method:\"PUT\",headers:{Accept:'application/json',\"Content-Type\":'application/json',Authorization:\"Bearer \".concat(token)},body:JSON.stringify({orderId:orderId,status:status})}).then(function(response){return response.json();}).catch(function(err){return console.log(err);});};/* working on Manage Products component */export var getProducts=function getProducts(){return fetch(\"\".concat(API,\"/products\"),{method:\"GET\"}).then(function(response){return response.json();}).catch(function(err){return console.log(err);});};export var deleteProduct=function deleteProduct(productId,userId,token){return fetch(\"\".concat(API,\"/product/\").concat(productId,\"/\").concat(userId),{method:\"DELETE\",headers:{Accept:'application/json',\"Content-Type\":'application/json',Authorization:\"Bearer \".concat(token)}}).then(function(response){return response.json();}).catch(function(err){return console.log(err);});};export var getProduct=function getProduct(productId){return fetch(\"\".concat(API,\"/product/\").concat(productId),{method:\"GET\"}).then(function(response){return response.json();}).catch(function(err){return console.log(err);});};export var updateProduct=function updateProduct(productId,userId,token,product){return fetch(\"\".concat(API,\"/product/\").concat(productId,\"/\").concat(userId),{method:\"PUT\",headers:{Accept:'application/json',Authorization:\"Bearer \".concat(token)},body:product//this product is sent as form-data.So , sontent-type is not  defined\n}).then(function(response){return response.json();}).catch(function(err){return console.log(err);});};","map":{"version":3,"sources":["D:/B Tech/WebD/Ecommerce_webApp/ecommerce-frontend/src/admin/apiAdmin.js"],"names":["API","createCategory","userId","token","category","fetch","method","headers","Accept","Authorization","body","JSON","stringify","then","response","json","catch","err","console","log","createProduct","product","getCategories","listOrders","getStatusValues","updateOrderStatus","orderId","status","getProducts","deleteProduct","productId","getProduct","updateProduct"],"mappings":"AAAA,OAAQA,GAAR,KAAkB,WAAlB,CAEA,MAAO,IAAMC,CAAAA,cAAc,CAAC,QAAfA,CAAAA,cAAe,CAACC,MAAD,CAAQC,KAAR,CAAcC,QAAd,CAAyB,CACjD,MAAOC,CAAAA,KAAK,WAAIL,GAAJ,6BAA2BE,MAA3B,EAAoC,CAAc;AAC1DI,MAAM,CAAC,MADqC,CAE5CC,OAAO,CAAC,CACJC,MAAM,CAAC,kBADH,CACgC;AACpC,eAAiB,kBAFb,CAEoC;AACxCC,aAAa,kBAAYN,KAAZ,CAHT,CAFoC,CAO5CO,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeR,QAAf,CAPsC,CAApC,CAAL,CASFS,IATE,CASG,SAAAC,QAAQ,CAAE,CACZ,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CACH,CAXE,EAYFC,KAZE,CAYI,SAAAC,GAAG,CAAE,CACRC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACH,CAdE,CAAP,CAeH,CAhBM,CAmBP,MAAO,IAAMG,CAAAA,aAAa,CAAC,QAAdA,CAAAA,aAAc,CAAClB,MAAD,CAAQC,KAAR,CAAckB,OAAd,CAAwB,CAC/C,MAAOhB,CAAAA,KAAK,WAAIL,GAAJ,4BAA0BE,MAA1B,EAAmC,CAAc;AACzDI,MAAM,CAAC,MADoC,CAE3CC,OAAO,CAAC,CACJC,MAAM,CAAC,kBADH,CACgC;AACpC;AACAC,aAAa,kBAAYN,KAAZ,CAHT,CAFmC,CAO3CO,IAAI,CAAEW,OAAU;AAP2B,CAAnC,CAAL,CASFR,IATE,CASG,SAAAC,QAAQ,CAAE,CACZ,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CACH,CAXE,EAYFC,KAZE,CAYI,SAAAC,GAAG,CAAE,CACRC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACH,CAdE,CAAP,CAeH,CAhBM,CAoBP,MAAO,IAAMK,CAAAA,aAAa,CAAC,QAAdA,CAAAA,aAAc,EAAI,CAC3B,MAAOjB,CAAAA,KAAK,WAAIL,GAAJ,gBAAqB,CAC7BM,MAAM,CAAE,KADqB,CAArB,CAAL,CAGNO,IAHM,CAGD,SAAAC,QAAQ,CAAE,CACZ,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CACH,CALM,EAMNC,KANM,CAMA,SAAAC,GAAG,QAAEC,CAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAF,EANH,CAAP,CAOH,CARM,CAYP,MAAO,IAAMM,CAAAA,UAAU,CAAC,QAAXA,CAAAA,UAAW,CAACrB,MAAD,CAAQC,KAAR,CAAgB,CACpC,MAAOE,CAAAA,KAAK,WAAIL,GAAJ,wBAAsBE,MAAtB,EAA+B,CACvCI,MAAM,CAAE,KAD+B,CAEvCC,OAAO,CAAC,CACJC,MAAM,CAAC,kBADH,CACgC;AACpCC,aAAa,kBAAYN,KAAZ,CAFT,CAF+B,CAA/B,CAAL,CAONU,IAPM,CAOD,SAAAC,QAAQ,CAAE,CACZ,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CACH,CATM,EAUNC,KAVM,CAUA,SAAAC,GAAG,QAAEC,CAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAF,EAVH,CAAP,CAWH,CAZM,CAiBP,MAAO,IAAMO,CAAAA,eAAe,CAAC,QAAhBA,CAAAA,eAAgB,CAACtB,MAAD,CAAQC,KAAR,CAAgB,CACzC,MAAOE,CAAAA,KAAK,WAAIL,GAAJ,iCAA+BE,MAA/B,EAAwC,CAChDI,MAAM,CAAE,KADwC,CAEhDC,OAAO,CAAC,CACJC,MAAM,CAAC,kBADH,CAEJC,aAAa,kBAAYN,KAAZ,CAFT,CAFwC,CAAxC,CAAL,CAONU,IAPM,CAOD,SAAAC,QAAQ,CAAE,CACZ,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CACH,CATM,EAUNC,KAVM,CAUA,SAAAC,GAAG,QAAEC,CAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAF,EAVH,CAAP,CAWH,CAZM,CAiBP,MAAO,IAAMQ,CAAAA,iBAAiB,CAAC,QAAlBA,CAAAA,iBAAkB,CAACvB,MAAD,CAAQC,KAAR,CAAcuB,OAAd,CAAsBC,MAAtB,CAA+B,CAC1D,MAAOtB,CAAAA,KAAK,WAAIL,GAAJ,oBAAkB0B,OAAlB,oBAAoCxB,MAApC,EAA6C,CACrDI,MAAM,CAAE,KAD6C,CAErDC,OAAO,CAAC,CACJC,MAAM,CAAC,kBADH,CAEJ,eAAgB,kBAFZ,CAGJC,aAAa,kBAAYN,KAAZ,CAHT,CAF6C,CAOrDO,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAACc,OAAO,CAAPA,OAAD,CAASC,MAAM,CAANA,MAAT,CAAf,CAP+C,CAA7C,CAAL,CASNd,IATM,CASD,SAAAC,QAAQ,CAAE,CACZ,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CACH,CAXM,EAYNC,KAZM,CAYA,SAAAC,GAAG,QAAEC,CAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAF,EAZH,CAAP,CAaH,CAdM,CAiBP,0CAGA,MAAO,IAAMW,CAAAA,WAAW,CAAC,QAAZA,CAAAA,WAAY,EAAI,CACzB,MAAOvB,CAAAA,KAAK,WAAIL,GAAJ,cAAmB,CAC3BM,MAAM,CAAE,KADmB,CAAnB,CAAL,CAGNO,IAHM,CAGD,SAAAC,QAAQ,CAAE,CACZ,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CACH,CALM,EAMNC,KANM,CAMA,SAAAC,GAAG,QAAEC,CAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAF,EANH,CAAP,CAOH,CARM,CAWP,MAAO,IAAMY,CAAAA,aAAa,CAAC,QAAdA,CAAAA,aAAc,CAACC,SAAD,CAAW5B,MAAX,CAAkBC,KAAlB,CAA0B,CACjD,MAAOE,CAAAA,KAAK,WAAIL,GAAJ,qBAAmB8B,SAAnB,aAAgC5B,MAAhC,EAAyC,CACjDI,MAAM,CAAE,QADyC,CAEjDC,OAAO,CAAC,CACJC,MAAM,CAAC,kBADH,CAEJ,eAAgB,kBAFZ,CAGJC,aAAa,kBAAYN,KAAZ,CAHT,CAFyC,CAAzC,CAAL,CAQNU,IARM,CAQD,SAAAC,QAAQ,CAAE,CACZ,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CACH,CAVM,EAWNC,KAXM,CAWA,SAAAC,GAAG,QAAEC,CAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAF,EAXH,CAAP,CAYH,CAbM,CAeP,MAAO,IAAMc,CAAAA,UAAU,CAAC,QAAXA,CAAAA,UAAW,CAAAD,SAAS,CAAE,CAC/B,MAAOzB,CAAAA,KAAK,WAAIL,GAAJ,qBAAmB8B,SAAnB,EAA+B,CACvCxB,MAAM,CAAE,KAD+B,CAA/B,CAAL,CAGNO,IAHM,CAGD,SAAAC,QAAQ,CAAE,CACZ,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CACH,CALM,EAMNC,KANM,CAMA,SAAAC,GAAG,QAAEC,CAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAF,EANH,CAAP,CAOH,CARM,CAWP,MAAO,IAAMe,CAAAA,aAAa,CAAC,QAAdA,CAAAA,aAAc,CAACF,SAAD,CAAW5B,MAAX,CAAkBC,KAAlB,CAAwBkB,OAAxB,CAAkC,CACzD,MAAOhB,CAAAA,KAAK,WAAIL,GAAJ,qBAAmB8B,SAAnB,aAAgC5B,MAAhC,EAAyC,CACjDI,MAAM,CAAE,KADyC,CAEjDC,OAAO,CAAC,CACJC,MAAM,CAAC,kBADH,CAEJC,aAAa,kBAAYN,KAAZ,CAFT,CAFyC,CAMjDO,IAAI,CAAEW,OAAsB;AANqB,CAAzC,CAAL,CAQNR,IARM,CAQD,SAAAC,QAAQ,CAAE,CACZ,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CACH,CAVM,EAWNC,KAXM,CAWA,SAAAC,GAAG,QAAEC,CAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAF,EAXH,CAAP,CAYH,CAbM","sourcesContent":["import {API} from '../config';\r\n\r\nexport const createCategory=(userId,token,category)=>{    \r\n    return fetch(`${API}/category/create/${userId}`,{             //fetch(url,object)\r\n        method:\"POST\",      \r\n        headers:{\r\n            Accept:'application/json',          //tells the server that which content-type is understandable by the client \r\n            \"Content-Type\" : \"application/json\",    //this tells backend that we are sending a json object\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(category)\r\n    })\r\n        .then(response=>{\r\n            return response.json();\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        });\r\n};\r\n\r\n\r\nexport const createProduct=(userId,token,product)=>{    \r\n    return fetch(`${API}/product/create/${userId}`,{             //fetch(url,object)\r\n        method:\"POST\",      \r\n        headers:{\r\n            Accept:'application/json',          //tells the server that which content-type is understandable by the client \r\n            //\"Content-Type\" : \"application/json\", //we don't need this here as we are sending form data here and not json\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: product   //product will be form-data\r\n    })\r\n        .then(response=>{\r\n            return response.json();\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        });\r\n};\r\n\r\n\r\n\r\nexport const getCategories=()=>{\r\n    return fetch(`${API}/categories`,{\r\n        method: \"GET\"\r\n    })\r\n    .then(response=>{\r\n        return response.json();\r\n    })\r\n    .catch(err=>console.log(err));\r\n}\r\n\r\n\r\n\r\nexport const listOrders=(userId,token)=>{\r\n    return fetch(`${API}/order/list/${userId}`,{\r\n        method: \"GET\",\r\n        headers:{\r\n            Accept:'application/json',          //tells the server that which content-type is understandable by the client         \r\n            Authorization: `Bearer ${token}`\r\n        },\r\n    })\r\n    .then(response=>{\r\n        return response.json();\r\n    })\r\n    .catch(err=>console.log(err));\r\n}\r\n\r\n\r\n\r\n\r\nexport const getStatusValues=(userId,token)=>{\r\n    return fetch(`${API}/order/status-values/${userId}`,{\r\n        method: \"GET\",\r\n        headers:{\r\n            Accept:'application/json',       \r\n            Authorization: `Bearer ${token}`\r\n        },\r\n    })\r\n    .then(response=>{\r\n        return response.json();\r\n    })\r\n    .catch(err=>console.log(err));\r\n};\r\n\r\n\r\n\r\n\r\nexport const updateOrderStatus=(userId,token,orderId,status)=>{\r\n    return fetch(`${API}/order/:${orderId}/status/${userId}`,{\r\n        method: \"PUT\",\r\n        headers:{\r\n            Accept:'application/json',  \r\n            \"Content-Type\": 'application/json' ,    \r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({orderId,status})\r\n    })\r\n    .then(response=>{\r\n        return response.json();\r\n    })\r\n    .catch(err=>console.log(err));\r\n};\r\n\r\n\r\n/* working on Manage Products component */\r\n\r\n\r\nexport const getProducts=()=>{\r\n    return fetch(`${API}/products`,{\r\n        method: \"GET\"\r\n    })\r\n    .then(response=>{\r\n        return response.json();\r\n    })\r\n    .catch(err=>console.log(err));\r\n};\r\n\r\n\r\nexport const deleteProduct=(productId,userId,token)=>{\r\n    return fetch(`${API}/product/${productId}/${userId}`,{\r\n        method: \"DELETE\",\r\n        headers:{\r\n            Accept:'application/json',  \r\n            \"Content-Type\": 'application/json' ,    \r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n    .then(response=>{\r\n        return response.json();\r\n    })\r\n    .catch(err=>console.log(err));\r\n};\r\n\r\nexport const getProduct=productId=>{\r\n    return fetch(`${API}/product/${productId}`,{\r\n        method: \"GET\"\r\n    })\r\n    .then(response=>{\r\n        return response.json();\r\n    })\r\n    .catch(err=>console.log(err));\r\n};\r\n\r\n\r\nexport const updateProduct=(productId,userId,token,product)=>{\r\n    return fetch(`${API}/product/${productId}/${userId}`,{\r\n        method: \"PUT\",\r\n        headers:{\r\n            Accept:'application/json',    \r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: product               //this product is sent as form-data.So , sontent-type is not  defined\r\n    })\r\n    .then(response=>{\r\n        return response.json();\r\n    })\r\n    .catch(err=>console.log(err));\r\n};"]},"metadata":{},"sourceType":"module"}