{"ast":null,"code":"var _jsxFileName = \"D:\\\\B Tech\\\\WebD\\\\ecommerce_MERN\\\\ecommerce-frontend\\\\src\\\\user\\\\Signin.js\";\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Layout from '../core/Layout';\nimport { signin, aurhenticate, isAuthenticated } from '../auth'; //since signin() is in \"index.js\" ,we don't specifically need to write that file's name. \n\nconst Signin = () => {\n  const [values, setValues] = useState({\n    email: \"\",\n    password: \"\",\n    error: \"\",\n    loading: false,\n    redirectToReferrer: false\n  });\n  const {\n    email,\n    password,\n    loading,\n    error,\n    redirectToReferrer\n  } = values;\n  const {\n    user\n  } = isAuthenticated(); //wherever we define variables like this, we are using it as a destructor.\n  //higher order function\n\n  const handleChange = name => event => {\n    setValues({ ...values,\n      error: false,\n      [name]: event.target.value\n    }); //... is aka rest operator\n    //so it takes the rest of the values\n  };\n\n  const clickSubmit = event => {\n    event.preventDefault(); //this is done to prevent Default action on clicking button.\n    //The default action is that the page gets reloaded   \n\n    setValues({ ...values,\n      error: false,\n      loading: true\n    });\n    signin({\n      email,\n      password\n    }) //since the key and value are same in name:name,email:email,password:password ,so\n    //we write this way\n    .then(data => {\n      if (data.error) {\n        setValues({ ...values,\n          password: '',\n          error: data.error,\n          loading: false\n        });\n      } else {\n        aurhenticate(data, () => {\n          //checks for info in LocalStorage\n          setValues({ ...values,\n            redirectToReferrer: true\n          });\n        });\n      }\n    });\n  };\n\n  const signInForm = () => /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleChange('email'),\n    type: \"email\",\n    className: \"form-control\",\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleChange('password'),\n    type: \"password\",\n    className: \"form-control\",\n    value: password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: clickSubmit,\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"Submit\"));\n\n  const showError = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-danger\",\n    style: {\n      display: error ? '' : 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, error); //curly braces were not used in this function. So, () is used.No return () statement.\n\n\n  const showLoading = () => loading && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, \"Loading...\"));\n\n  const redirectUser = () => {\n    if (redirectToReferrer) {\n      if (user && user.role === 1) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/admin/dashboard\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 24\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/user/dashboard\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 24\n          }\n        });\n      }\n    }\n\n    if (isAuthenticated()) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 20\n        }\n      });\n    }\n  };\n\n  return (\n    /*#__PURE__*/\n    //curly braces were used in this function. So, return() is used.\n    React.createElement(Layout, {\n      title: \"Signin\",\n      description: \"Signup to E-commerce App\",\n      className: \"container col-md-6 offset-md-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, showError(), showLoading(), signInForm(), redirectUser())\n  );\n};\n\nexport default Signin;","map":{"version":3,"sources":["D:/B Tech/WebD/ecommerce_MERN/ecommerce-frontend/src/user/Signin.js"],"names":["React","useState","Redirect","Layout","signin","aurhenticate","isAuthenticated","Signin","values","setValues","email","password","error","loading","redirectToReferrer","user","handleChange","name","event","target","value","clickSubmit","preventDefault","then","data","signInForm","showError","display","showLoading","redirectUser","role"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\r\nimport { Redirect} from 'react-router-dom';\r\nimport Layout from '../core/Layout';\r\nimport {signin,aurhenticate,isAuthenticated} from '../auth';\r\n    //since signin() is in \"index.js\" ,we don't specifically need to write that file's name. \r\n\r\nconst Signin=()=> {\r\n    const [values,setValues]=useState({\r\n        email:\"\",\r\n        password:\"\",\r\n        error:\"\",\r\n        loading:false,\r\n        redirectToReferrer:false\r\n    });\r\n\r\n    const {email,password,loading,error,redirectToReferrer}=values;\r\n    const {user}=isAuthenticated();\r\n    //wherever we define variables like this, we are using it as a destructor.\r\n\r\n    //higher order function\r\n    const handleChange=name=>event=>{\r\n        setValues({...values,error:false, [name]:event.target.value});  //... is aka rest operator\r\n                                                                    //so it takes the rest of the values\r\n    };\r\n\r\n    \r\n\r\n    const clickSubmit=(event)=>{\r\n        event.preventDefault(); //this is done to prevent Default action on clicking button.\r\n                                //The default action is that the page gets reloaded   \r\n        setValues({...values,error:false,loading:true});\r\n        signin({email,password})\r\n            //since the key and value are same in name:name,email:email,password:password ,so\r\n            //we write this way\r\n            .then(data=>{ \r\n                if(data.error){\r\n                    setValues({...values,password:'',error: data.error, loading:false,});\r\n                }else{\r\n                    aurhenticate(data,()=>{     //checks for info in LocalStorage\r\n                        setValues({...values,\r\n                            redirectToReferrer:true\r\n                        });\r\n                    })\r\n                }\r\n            });    \r\n    };\r\n\r\n    const signInForm=()=>(\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Email</label>\r\n                <input onChange={handleChange('email')} type=\"email\" className=\"form-control\" value={email}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Password</label>\r\n                <input onChange={handleChange('password')} type=\"password\" className=\"form-control\" value={password}/>\r\n            </div>\r\n            <button onClick={clickSubmit} className=\"btn btn-primary\">\r\n                Submit\r\n            </button>\r\n        </form>\r\n    );\r\n\r\n    const showError=()=>(\r\n        <div className=\"alert alert-danger\" style={{display:error?'':'none'}}>\r\n            {error}\r\n        </div>\r\n    );\r\n    //curly braces were not used in this function. So, () is used.No return () statement.\r\n\r\n\r\n    const showLoading=()=>(\r\n        loading && (\r\n            <div className=\"alert alert-info\">\r\n                <h2>Loading...</h2>\r\n            </div>\r\n        )\r\n    );\r\n\r\n    const redirectUser=()=>{\r\n        if(redirectToReferrer){\r\n            if(user && user.role===1){\r\n                return <Redirect to='/admin/dashboard' />;\r\n            }else{\r\n                return <Redirect to='/user/dashboard' />;\r\n            }\r\n        }\r\n        if(isAuthenticated()){\r\n            return <Redirect to='/' />;\r\n        }\r\n    };\r\n\r\n    return(     //curly braces were used in this function. So, return() is used.\r\n        <Layout title='Signin' description='Signup to E-commerce App' \r\n        className=\"container col-md-6 offset-md-2\">\r\n            {showError()}\r\n            {showLoading()}\r\n            {signInForm()}\r\n            {redirectUser()}\r\n        </Layout>\r\n    );\r\n};\r\n\r\n\r\nexport default Signin;"]},"metadata":{},"sourceType":"module"}